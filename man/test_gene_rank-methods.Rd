% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R, R/methods_SE.R
\docType{methods}
\name{test_gene_rank}
\alias{test_gene_rank}
\alias{test_gene_rank,spec_tbl_df-method}
\alias{test_gene_rank,tbl_df-method}
\alias{test_gene_rank,tidybulk-method}
\alias{test_gene_rank,SummarizedExperiment-method}
\alias{test_gene_rank,RangedSummarizedExperiment-method}
\title{analyse gene over-representation with GSEA}
\usage{
test_gene_rank(
  .data,
  .entrez,
  .arrange,
  species,
  .sample = NULL,
  gene_set = NULL
)

\S4method{test_gene_rank}{spec_tbl_df}(
  .data,
  .entrez,
  .arrange,
  species,
  .sample = NULL,
  gene_set = NULL
)

\S4method{test_gene_rank}{tbl_df}(
  .data,
  .entrez,
  .arrange,
  species,
  .sample = NULL,
  gene_set = NULL
)

\S4method{test_gene_rank}{tidybulk}(
  .data,
  .entrez,
  .arrange,
  species,
  .sample = NULL,
  gene_set = NULL
)

\S4method{test_gene_rank}{SummarizedExperiment}(
  .data,
  .entrez,
  .arrange,
  species,
  .sample = NULL,
  gene_set = NULL
)

\S4method{test_gene_rank}{RangedSummarizedExperiment}(
  .data,
  .entrez,
  .arrange,
  species,
  .sample = NULL,
  gene_set = NULL
)
}
\arguments{
\item{.data}{A `tbl` formatted as | <SAMPLE> | <TRANSCRIPT> | <COUNT> | <...> |}

\item{.entrez}{The ENTREZ ID of the transcripts/genes}

\item{species}{A character. For example, human or mouse. MSigDB uses the latin species names (e.g., \"Mus musculus\", \"Homo sapiens\")}

\item{.sample}{The name of the sample column}

\item{gene_set}{A character vector. The subset of MSigDB datasets you want to test against (e.g. \"C2\"). If NULL all gene sets are used (suggested). This argument was added to avoid time overflow of the examples.}

\item{.do_test}{A boolean column name symbol. It indicates the transcript to check}
}
\value{
A `tbl` object

A `spec_tbl_df` object

A `tbl_df` object

A `tidybulk` object

A `SummarizedExperiment` object

A `RangedSummarizedExperiment` object
}
\description{
test_gene_rank() takes as input a `tbl` formatted as | <SAMPLE> | <ENSEMBL_ID> | <COUNT> | <...> | and returns a `tbl` with the GSEA statistics
}
\details{
\lifecycle{maturing}

This wrapper execute gene enrichment analyses of the dataset using a list of transcripts and GSEA.
This wrapper uses clusterProfiler (DOI: doi.org/10.1089/omi.2011.0118) on the back-end.

Undelying method:
 msigdbr::msigdbr(species = species) %>%#'
	nest(data = -gs_cat) %>%
	mutate(test =
			map(
				data,
				~ clusterProfiler::enricher(
					my_entrez_rank,
				 	TERM2GENE=.x %>% select(gs_name, entrez_gene),
					pvalueCutoff = 1
					) %>%	as_tibble
			))
}
\examples{

df_entrez = symbol_to_entrez(tidybulk::counts_mini, .transcript = transcript, .sample = sample)
df_entrez = aggregate_duplicates(df_entrez, aggregation_function = sum, .sample = sample, .transcript = entrez, .abundance = count)
df_entrez = mutate(df_entrez, do_test = transcript \%in\% c("TNFRSF4", "PLCH2", "PADI4", "PAX7"))

	test_gene_rank(
		df_entrez,
		.sample = sample,
		.entrez = entrez,
		.do_test = do_test,
		species="Homo sapiens",
   gene_set=c("C2")
	)


}
